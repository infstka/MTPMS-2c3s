NET Framework поддерживаются пять типов коллекций: необобщенные, специальные, с поразрядной организацией, обобщенные и параллельные. Реализуют ряд основных структур данных, включая динамический массив, стек, очередь, а также словари, в которых можно хранить пары "ключ-значение".

Обобщенные коллекции
Обеспечивают обобщенную реализацию нескольких стандартных структур
данных, включая связные списки, стеки, очереди и словари. Такие коллекции
являются типизированными в силу их обобщенного характера. Это означает, что в
обобщенной коллекции могут храниться только такие элементы данных, которые
совместимы по типу с данной коллекцией. Благодаря этому исключается случайное
несовпадение типов. Обобщенные коллекции объявляются в пространстве
именSystem.Collections.Generic.

Массив: Массив-это структура данных фиксированной длины. Вы не можете изменить длину массива, созданного в Java. Массив статичен по своей природе.
ArrayList: ArrayList-это класс коллекции переменной длины. ArrayList изменяет размер при заполнении в зависимости от емкости и коэффициента нагрузки. Arraylist динамичен по своей природе.

Необобщенные коллекции
Реализуют ряд основных структур данных, включая динамический массив,
стек, очередь, а также словари, в которых можно хранить пары "ключ-значение". В
отношении необобщенных коллекций важно иметь в виду следующее: они оперируют
данными типа object. Таким образом, необобщенные коллекции могут служить для
хранения данных любого типа, причем в одной коллекции допускается наличие
разнотипных данных. Очевидно, что такие коллекции не типизированы, поскольку в
них хранятся ссылки на данные типа object. Классы и интерфейсы необобщенных
коллекций находятся в пространстве имен System.Collections.

Специальные коллекции
Оперируют данными конкретного типа или же делают это каким-то особым
образом. Например, имеются специальные коллекции для символьных строк, а также
специальные коллекции, в которых используется однонаправленный список.
Специальные коллекции объявляются в пространстве
имен System.Collections.Specialized.

Поразрядная коллекция
В прикладном интерфейсе Collections API определена одна коллекция с
поразрядной организацией — это BitArray. Коллекция типа BitArray поддерживает
поразрядные операции, т.е. операции над отдельными двоичными разрядами,
например И, ИЛИ, исключающее ИЛИ, а следовательно, она существенно отличается
своими возможностями от остальных типов коллекций. Коллекция типа BitArray
объявляется в пространстве имен System.Collections.

Параллельные коллекции
Поддерживают многопоточный доступ к коллекции. Это обобщенные
коллекции, определенные в пространстве имен System.Collections.Concurrent.
В пространстве имен System.Collections.ObjectModel находится также ряд
классов, поддерживающих создание пользователями собственных обобщенных
коллекций.

(System.Collections.Generic)

Кроме стандартных классов коллекций типа списков, очередей, словарей, стеков .NET также предоставляет специальный класс ObservableCollection. Он по функциональности похож на список List за тем исключением, что позволяет известить внешние объекты о том, что коллекция была изменена.

Для циклического обращения к элементам коллекции зачастую проще (да и лучше) организовать цикл foreach, чем пользоваться непосредственно методами интерфейса IEnumerator. Тем не менее ясное представление о принципе действия подобных интерфейсов важно иметь по еще одной причине: если требуется создать класс, содержащий объекты, перечисляемые в цикле foreach, то в этом классе следует реализовать интерфейсы IEnumerator и IEnumerable. Иными словами, для того чтобы обратиться к объекту определяемого пользователем класса в цикле foreach, необходимо реализовать интерфейсы IEnumerator и IEnumerable в их обобщенной или необобщенной форме. Правда, сделать это будет нетрудно, поскольку оба интерфейса не очень велики.