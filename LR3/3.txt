Класс
Класс это абстрактный тип данных, определяемый программистом
(пользователем). С помощью классов определяются свойства объектов.
Объекты это экземпляры класса.
Члены класса – это данные и функции для работы с этими данными.
Имя класса – это, по сути дела, имя нового типа данных.
Данные класса подразделяются на поля, константы и события.
Поле – это обычная член-переменная, содержащая некоторое значение.
Константы – это поле, объявленное с модификатором const

Методы
с помощью методов класса осуществляется обработка член
данных класса. Другими словами, методы определяют поведение экземпляров
данного класса. 

Свойства
Свойства в С# состоят из объявления поля и методов-аксессоров для
работы с этим полем.
Эти методы- аксессоры называются получатель (get) и установщик (set)
Аксессор get всегда возвращает значение того типа, который указан в
определении свойства. Аксессор set всегда принимает в качестве параметра
переменную value, которая передается ему неявно.

Индексатор
Индексаторы позволяют приложению обращаться с объектом класса так,
как будто он является массивом

Конструктор
метод класса, имеющий имя класса используется для инициализации объекта.
Конструкторов в классе может быть несколько или ни одного.
Конструктор, объявленный без аргументов, называется конструктором
по умолчанию.

Статический конструктор
Статический конструктор используется для инициализации любых статических данных или для выполнения определенного действия, которое требуется выполнить только один раз.

Деструктор 
Деструктор, это метод который вызывается для гарантированного освобождения памяти под объект.

Модификаторы доступа
Модификаторы доступа позволяют задать допустимую область видимости для компонентов класса. То есть модификаторы доступа определяют контекст, в котором можно употреблять данную переменную или метод.
private: закрытый или приватный компонент класса или структуры. Приватный компонент доступен только в рамках своего класса или структуры.

private protected: компонент класса доступен из любого места в своем классе или в производных классах, которые определены в той же сборке.

protected: такой компонент класса доступен из любого места в своем классе или в производных классах. При этом производные классы могут располагаться в других сборках.

internal: компоненты класса или структуры доступен из любого места кода в той же сборке, однако он недоступен для других программ и сборок.

protected internal: совмещает функционал двух модификаторов protected и internal. Такой компонент класса доступен из любого места в текущей сборке и из производных классов, которые могут располагаться в других сборках.
public: публичный, общедоступный компонент класса или структуры. Такой компонент доступен из любого места в коде, а также из других программ и сборок.

this 
Ключевое слово this представляет указатель на текущий объект данного класса. Соответственно через this мы можем обращаться внутри класса к любым его членам. 
